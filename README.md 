# Verify Seller AI

A web app to detect counterfeit sellers and fake branded products using OCR, logo classification, and risk analysis.

## Project Structure

```
Backend/
  app.py
  brand_detector.py
  imagenet_labels.txt
  mobilenetv2-7.onnx
  requirements.txt
  model/
    logo_classifier.py
    ocr_utils.py
    predict.py
  Data/
    Test/
    Train/
    Fake/
    Real/
Frontend/
  index.html
  script.js
  style.css
```

## Setup Instructions

### 1. Clone the Repository

```sh
git clone <your-repo-url>
cd verify-seller-ai
```

### 2. Backend Setup

a. Create a virtual environment (recommended):

```sh
cd Backend
python3 -m venv .venv
source .venv/bin/activate
```

b. Install dependencies:

```sh
pip install -r requirements.txt
```

c. Download or place the following files in `Backend/`:

- `mobilenetv2-7.onnx` (ONNX model for logo classification)
- `imagenet_labels.txt` (list of brand names, one per line)

d. Run the backend server:

```sh
python app.py
```

### 3. Frontend Setup

No build step is required. Simply open `Frontend/index.html` in your browser.

> **Note:** For full functionality, keep the backend running.

## Usage

1. Open `Frontend/index.html` in your browser.
2. Fill in product details and/or upload an image.
3. Click "Run Fraud Checks" to see the risk analysis and brand verification.

## Troubleshooting

- If you get errors about missing Python packages, install them using `pip install <package>`.
- Make sure the backend is running before using the frontend.
- If OCR or logo detection fails, check that `pytesseract` and `onnxruntime` are installed and that the model files are present.

## License

MIT License

## Authors

sonal yadav 

## Collaborators

<!-- Add collaborator names here -->